"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""
#https://stackoverflow.com/questions/171765/what-is-the-best-way-to-get-all-the-divisors-of-a-number
import math

def count_divisors(n):
    large_divisors = []
    r = 0
    for i in range(1, int(math.sqrt(n) + 1)):
        if n % i == 0:
            r += 1
            if i*i != n:
                r += 1
    return r

b = False
i = 0
n = 0
while not b:
    i += 1
    n += i
    if count_divisors(n) > 500:
        b = True
print(n)
